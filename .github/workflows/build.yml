name: 构建

on: 
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  builder_matrix:
    strategy:
      fail-fast: false
      matrix:
        arch: [ x86, x64 ]
        os: [ windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: 检出仓库
        uses: actions/checkout@v4.2.2
      - name: 安装 Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.8.10'
          architecture: ${{ matrix.arch }}
      - name: 安装 uv
        uses: astral-sh/setup-uv@v4
      - name: 初始化 zip 文件夹
        run: mkdir zip

      - name: 运行 Windows 构建
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          # 创建虚拟环境
          uv venv
          # 激活虚拟环境
          .venv/Scripts/activate
          # 安装依赖
          uv pip install -r requirements.txt
          # 安装 pyinstaller
          uv pip install pyinstaller
          # 使用 pyinstaller 打包应用程序
          pyinstaller main.py `
            -w `
            -F `
            -i ./resources/SecRandom.ico `
            -n SecRandom `
            --contents-directory . `
            --add-data ./app/resource:app/resource `
            --add-data LICENSE:. `
            --version-file=version_info.txt `
            --add-binary="$(python -c 'import PyQt5.QtWidgets; print(PyQt5.QtWidgets.__file__)'):PyQt5/Qt5/bin"
          # 创建zip_dist/SecRandom目录
          mkdir zip_dist/SecRandom
          # 复制dist目录下的所有文件到zip_dist/SecRandom目录下
          Copy-Item -Recurse -Force dist/* zip_dist/SecRandom
          # 创建app目录
          mkdir zip_dist/SecRandom/app
          # 复制app/resource文件夹到zip_dist/SecRandom目录下
          Copy-Item -Recurse -Force app/resource zip_dist/SecRandom/app
          # 复制 LICENSE 文件到zip_dist/SecRandom目录下
          Copy-Item LICENSE zip_dist/SecRandom
          # 使用系统自带的 Compress-Archive 压缩文件
          Compress-Archive -Path zip_dist/SecRandom/* -DestinationPath "zip/SecRandom-Windows-${{ matrix.arch }}.zip" -Force


      - name: 上传已签名的应用程序
        if: ${{ matrix.os == 'windows-latest' && github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v4.4.2
        with:
          name: windows-latest-${{ matrix.arch }}
          path: ./zip

  release:
    needs: [builder_matrix]
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    uses: ./.github/workflows/release.yml
    with:
      runid: ${{ github.run_id }}