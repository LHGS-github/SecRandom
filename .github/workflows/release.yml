name: 生成 Changelog 并发布版本

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
  workflow_call:
    inputs:
      runid:
        required: true
        type: string

permissions:
  contents: write

jobs:
  generate-changelog-and-release:
    name: 生成 Changelog 并发布版本
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 获取上一个标签
        uses: younited/get-previous-tag-action@v1.0.0
        id: getprevtag

      - name: 设置 git-cliff
        uses: kenji-miyake/setup-git-cliff@v1

      - name: 生成 changelog
        id: generate-changelog
        run: |
          git cliff

      - name: 准备发布
        run: |
          mkdir release
          mkdir artifacts

      - name: 下载 artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          run-id: ${{ github.event.workflow_run.id }}

      - name: 准备 artifacts 
        run: |
          mv artifacts/windows-latest-x64/* release/

      - name: 计算 SHA256 值
        run: |
          cd release
          for file in *; do
            sha256sum "$file" >> SHA256SUMS.txt
          done
          cat SHA256SUMS.txt
          
      - name: 验证 SHA256SUMS.txt 文件
        run: |
          cd release
          if [ ! -f "SHA256SUMS.txt" ]; then
            echo "错误：在release目录中未找到SHA256SUMS.txt文件"
            exit 1
          fi
          cd ..

      - name: 生成 SHA256 的表格信息
        run: |
          cd release
          echo "**请核对下载的文件的SHA256值是否正确**" >> ../CHANGELOG.md
          echo "| 文件名 | SHA256 值 |" >> ../CHANGELOG.md
          echo "| --- | --- |" >> ../CHANGELOG.md
          while read -r line; do
            hash=$(echo "$line" | awk '{print $1}')
            file=$(echo "$line" | awk '{print $2}')
            echo "| $file | $hash |" >> ../CHANGELOG.md
          done < SHA256SUMS.txt
          rm SHA256SUMS.txt
          cd ..
            
      - name: 确定发布类型
        id: release-type
        run: |
          if [[ "${{ github.ref }}" == *"beta"* || "${{ github.ref }}" == *"alpha"* ]]; then
            echo "is_beta=true" >> $GITHUB_ENV
          else
            echo "is_beta=false" >> $GITHUB_ENV
          fi

      - name: 发布
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.Releases_BOT }}
          files: release/*
          body_path: CHANGELOG.md
          draft: false
          prerelease: ${{ env.is_beta == 'true' }}
          tag_name: ${{ github.ref_name }}
          name: SecRandom 新版本 - ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}